{"version":3,"sources":["context/alertas/alertaContex.jsx","context/autenticacion/authContex.js","components/auth/Login.jsx","components/auth/NuevaCuenta.jsx","context/proyectos/proyectoContex.jsx","components/proyectos/NuevoProyecto.jsx","context/tareas/tareaContext.jsx","components/proyectos/Proyecto.jsx","components/proyectos/ListadoProyectos.jsx","components/layout/Sidebar.jsx","components/layout/Barra.jsx","components/tareas/FormTareas.jsx","components/tareas/Tarea.jsx","components/tareas/ListadoTareas.jsx","components/proyectos/Proyectos.jsx","types/index.js","context/proyectos/proyectoReducer.jsx","config/axios.js","context/proyectos/proyectoState.jsx","context/tareas/tareaReducer.jsx","context/tareas/tareaState.jsx","context/alertas/alertaReducer.jsx","context/alertas/alertaState.jsx","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/routes/RutaPrivada.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContentx","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","preventDefault","target","name","value","className","onSubmit","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProycto","proyectosContext","formulario","mostrarForm","agregarProyecto","mostrarError","errorformulario","proyecto","guardarProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyctos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","NuevoProyecto","ListadoProyectos","Barra","AuthContext","usuarioAutenticado","cerrarSesion","FormTareas","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyectos","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","proyectoContex","Provider","children","TareaState","TareaReducer","params","tareas","response","put","AlertaState","alertaReducer","alertaContex","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.414a76e0.chunk.js","sourcesContent":["import React, {createContext} from 'react'\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import React, {createContext} from 'react'\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContex\";\r\nimport AuthContentx from \"../../context/autenticacion/authContex\";\r\nconst Login = props => {\r\n  //extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContentx);\r\n  const { mensaje, autenticado, iniciarSesion } = authContext;\r\n//Usuario incorrecto \r\n  useEffect(() => {\r\n    if(autenticado){\r\n      props.history.push('/proyectos');\r\n    }\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [mensaje, autenticado, props.history])\r\n  //State para iniciar sesión\r\n  const [usuario, guardarUsuario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  //Extraer usuaio\r\n  const { email, password } = usuario;\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    guardarUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //Cuando se haga click en enviar\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Validar que no haya campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //Pasarlo al action\r\n    iniciarSesion({\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Inciar Sesión</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              value={password}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <button type=\"submit\" className=\"btn btn-primario btn-block\">\r\n              Iniciar Sesión\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"route-sesion\">\r\n          <p>¿Aún no tienes cuenta?</p>\r\n          <Link to=\"/nueva-cuenta\" className=\"enlace-cuenta\">\r\n            Registrarse\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContex\";\r\nimport AuthContentx from '../../context/autenticacion/authContex';\r\nconst NuevaCuenta = (props) => {\r\n  //extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContentx);\r\n  const {mensaje, autenticado, registrarUsuario} = authContext;\r\n  //En caso de que el usuario se haya autenticado\r\n  useEffect(() => {\r\n    if(autenticado){\r\n      props.history.push('/proyectos');\r\n    }\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    //eslint-disable-next-line\r\n    \r\n  }, [mensaje, autenticado, props.history])\r\n  //State para iniciar sesión\r\n  const [usuario, guardarUsuario] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n  //Extraer usuaio\r\n  const { nombre, email, password, confirmar } = usuario;\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    guardarUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //Cuando se haga click en enviar\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //Validar que no haya campos vacios\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta('TODOS LOS CAMPOS SON OBLIGATORIOS', 'alerta-error');\r\n      return;\r\n    }\r\n    //Password  6 caracteres\r\n    if(password.length < 6){\r\n      mostrarAlerta('El Password debe ser minimo de 6 caracteres', 'alerta-error');\r\n      return;\r\n    }\r\n    //Password iguales\r\n    if(password !== confirmar){\r\n      mostrarAlerta('Las contraseñas han de ser iguales', 'alerta-error');\r\n      return;\r\n\r\n    }\r\n    //Pasarlo al action\r\n    registrarUsuario({\r\n      nombre,\r\n      email,\r\n      password\r\n    })\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Crear una nueva cuenta</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"Tu nombre\"\r\n              value={nombre}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              value={password}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmar\"\r\n              name=\"confirmar\"\r\n              placeholder=\"Confirmar Password\"\r\n              value={confirmar}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <button type=\"submit\" className=\"btn btn-primario btn-block\">\r\n              Registrarse\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"route-sesion\">\r\n          <p>Ya tengo cuenta!</p>\r\n          <Link to=\"/\" className=\"enlace-cuenta\">\r\n            Iniciar Sesión\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n","import {createContext} from 'react';\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React, { Fragment, useContext, useState } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nconst NuevoProycto = () => {\r\n  //Obtener el state del formulario\r\n  const proyectosContext = useContext(proyectoContext);\r\n  //Extraer formulario desde context\r\n  const {\r\n    formulario,\r\n    mostrarForm,\r\n    agregarProyecto,\r\n/*     VALIDAR_FORMULARIO,\r\n */    mostrarError,\r\n    errorformulario\r\n  } = proyectosContext;\r\n  //State para proyectos\r\n  const [proyecto, guardarProyecto] = useState({\r\n    nombre: \"\",\r\n  });\r\n  //leer contenido  del input\r\n  const { nombre } = proyecto;\r\n  const onChangeProyecto = (e) => {\r\n    guardarProyecto({\r\n      ...proyecto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //Funcion para el envio de formulario\r\n\r\n  const onSubmitProyecto = (e) => {\r\n    e.preventDefault();\r\n    //Validar proyecto\r\n    if (nombre === \"\") {\r\n      mostrarError();\r\n      return;\r\n    }\r\n    //Agregar al state\r\n    agregarProyecto(proyecto);\r\n    //Reiniciar fomr\r\n    guardarProyecto({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  const mostrarFormulario = () => mostrarForm();\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={mostrarFormulario}\r\n      >\r\n        Nuevo Proyecto\r\n      </button>\r\n      {formulario ? (\r\n        <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitProyecto}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre del proyecto\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={onChangeProyecto}\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primario btn-block\">\r\n            Agregar Proyecto\r\n          </button>\r\n        </form>\r\n      ) : null}\r\n      {\r\n        errorformulario ? <p className='mensaje error'>Nombre de la tarea Es obligatorio</p> : null\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NuevoProycto;\r\n","import {createContext} from 'react'\r\n\r\nconst TareaContext = createContext();\r\n\r\nexport default TareaContext;","import React, { Fragment, useContext, useState } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nimport TareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst Proyecto = ({ proyecto }) => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  //Extraer formulario desde context\r\n  const { proyectoActual } = proyectosContext;\r\n\r\n  //Obtener la función del context tarea\r\n  const tareasContext = useContext(TareaContext);\r\n  const { obtenerTareas } = tareasContext;\r\n\r\n  //Funcion para agregar el proyecto actual\r\n  const seleccionarProyecto = (id) => {\r\n    proyectoActual(id); //Fijar un proyecto actual\r\n    obtenerTareas(id);\r\n  };\r\n  return (\r\n    <li>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-blank\"\r\n        onClick={() => seleccionarProyecto(proyecto._id)}\r\n      >\r\n        {proyecto.nombre}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Proyecto;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Proyecto from \"./Proyecto\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nimport AlertaContext from \"../../context/alertas/alertaContex\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ListadoProyctos = () => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  //Extraer formulario desde context\r\n  const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  useEffect(() => {\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    obtenerProyectos();\r\n    // eslint-disable-next-line\r\n  }, [mensaje]);\r\n  if (proyectos.length === 0)\r\n    return <p>No tienes ningún Proyecto, Agregue un nuevo Proyecto</p>;\r\n\r\n  return (\r\n    <ul className=\"listado-proyectos\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <TransitionGroup>\r\n        {proyectos.map((proyecto) => (\r\n          <CSSTransition key={proyecto._id} timeout={200} classNames=\"proyecto\">\r\n            <Proyecto proyecto={proyecto} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListadoProyctos;\r\n","import React,{} from \"react\";\r\nimport NuevoProyecto from \"../proyectos/NuevoProyecto\";\r\nimport ListadoProyectos from \"../proyectos/ListadoProyectos\";\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside>\r\n      <h1>\r\n        MERN <span>Task</span>\r\n      </h1>\r\n      <NuevoProyecto />\r\n      <div className=\"proyectos\">\r\n        <h2>Tus Proyectos</h2>\r\n        <ListadoProyectos />\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React,{useContext, useEffect} from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/authContex\";\r\n\r\nconst Barra = () => {\r\n    const authContext = useContext(AuthContext);\r\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <header className=\"app-header\">\r\n        {usuario ?  <p className=\"nombre-usuario\">\r\n        Hola <span>{usuario.nombre}</span>\r\n      </p> : null}\r\n      <nav className=\"nav-principal\">\r\n        <button className='btn btn-blank cerrar-sesion'\r\n        onClick={()=>{\r\n            cerrarSesion()\r\n        }}>\r\n        Cerrar Sesión\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Barra;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nimport TareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst FormTareas = () => {\r\n  //Extraer Si un formulario esta activo\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto } = proyectosContext;\r\n  //Obtener las tareas del context tarea\r\n  const tareasContext = useContext(TareaContext);\r\n  const {\r\n    tareaseleccionada,\r\n    errortarea,\r\n    agregarTarea,\r\n    validarTarea,\r\n    obtenerTareas,\r\n    actualizarTarea,\r\n    limpiarTarea\r\n  } = tareasContext;\r\n  //effect que detecta tarea seleccionada\r\n  useEffect(() => {\r\n    if (tareaseleccionada !== null) {\r\n      guardarTarea(tareaseleccionada);\r\n    } else {\r\n      guardarTarea({\r\n        nombre: \"\",\r\n      });\r\n    }\r\n  }, [tareaseleccionada]);\r\n  //State para el formulario\r\n  const [tarea, guardarTarea] = useState({\r\n    nombre: \"\",\r\n  });\r\n  //extraer nombre\r\n\r\n  const { nombre } = tarea;\r\n  //Si no hay proyecto seleccionado\r\n  if (!proyecto) return null;\r\n  //Array destructuring extraer proyecto\r\n  const [proyectoActual] = proyecto;\r\n\r\n  //Leer valores del formulario\r\n  const handelChange = (e) => {\r\n    guardarTarea({\r\n      ...tarea,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //validar\r\n    if (nombre.trim() === \"\") {\r\n      validarTarea(true);\r\n      return;\r\n    }\r\n    //revisar\r\n    if (tareaseleccionada === null) {\r\n      //agregar tarea\r\n      tarea.proyecto = proyectoActual._id;\r\n      agregarTarea(tarea);\r\n    }else{\r\n      //tarea existente\r\n      actualizarTarea(tarea);\r\n      //limpiar\r\n      limpiarTarea();\r\n    }\r\n\r\n    //Obtener y filtrar tareas\r\n    obtenerTareas(proyectoActual.id);\r\n    //Reiniciar form\r\n    guardarTarea({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"formulario\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre de la tarea\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handelChange}\r\n          />\r\n        </div>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primario btn-block\"\r\n            value={tareaseleccionada ? \"Actualizar Tarea\" : \"Agregar Tarea\"}\r\n          />\r\n        </div>\r\n      </form>\r\n      {errortarea ? (\r\n        <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormTareas;\r\n","import React, { useContext } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nimport TareaContext from \"../../context/tareas/tareaContext\";\r\nconst Tarea = ({ tarea }) => {\r\n  //Extraer Si un formulario esta activo\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto } = proyectosContext;\r\n\r\n  //Obtener las tareas del context tarea\r\n  const tareasContext = useContext(TareaContext);\r\n  const {\r\n    eliminarTarea,\r\n    obtenerTareas,\r\n    actualizarTarea,\r\n    guardarTareaActual,\r\n  } = tareasContext;\r\n\r\n  const [proyectoActual] = proyecto;\r\n\r\n  //funcion que se ejecuta en eliminar\r\n  const tareaEliminar = (id) => {\r\n    eliminarTarea(id, proyectoActual._id);\r\n    obtenerTareas(proyectoActual.id);\r\n  };\r\n  //funcion que modifica el estaod de la tarea\r\n  const cambiarEstado = (tarea) => {\r\n    if (tarea.estado) {\r\n      tarea.estado = false;\r\n    } else {\r\n      tarea.estado = true;\r\n    }\r\n    actualizarTarea(tarea);\r\n  };\r\n  //agrega una tarea actual cuando el usuario edita\r\n  const seleccionarTarea = (tarea) => {\r\n    guardarTareaActual(tarea);\r\n  };\r\n  return (\r\n    <li className=\"tarea sombre\">\r\n      <p>{tarea.nombre}</p>\r\n      <div className=\"estado\">\r\n        {tarea.estado ? (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n            className=\"completo\"\r\n          >\r\n            Completado\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n            className=\"incompleto\"\r\n          >\r\n            Incompleto\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"acciones\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primario\"\r\n          onClick={() => seleccionarTarea(tarea)}\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secundario\"\r\n          onClick={() => tareaEliminar(tarea._id)}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tarea;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport Tarea from \"./Tarea\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContex\";\r\nimport TareaContext from \"../../context/tareas/tareaContext\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ListadoTareas = () => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  //Extraer formulario desde context\r\n  const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n  //Obtener las tareas del context tarea\r\n  const tareasContext = useContext(TareaContext);\r\n  const { tareasproyectos } = tareasContext;\r\n\r\n  //Si no hay proyecto seleccionado\r\n  if (!proyecto) return <h2>Selecciona un Proyecto</h2>;\r\n  //Array destructuring extraer proyecto\r\n  const [proyectoActual] = proyecto;\r\n\r\n  //ELiminar un proyecto\r\n  const onClickEliminar = () => eliminarProyecto(proyectoActual._id);\r\n  return (\r\n    <Fragment>\r\n      <h2>Proyecto: {proyectoActual.nombre} </h2>\r\n      <ul className=\"Listado-tareas\">\r\n        {tareasproyectos.length === 0 ? (\r\n          <li className=\"tarea no_tarea\">\r\n            No tienes ninguna tarea en este Proyecto\r\n          </li>\r\n        ) : (\r\n          <TransitionGroup>\r\n            {tareasproyectos.map((tarea) => (\r\n              <CSSTransition key={tarea._id} timeout={200} classNames=\"tarea\">\r\n                <Tarea tarea={tarea} />\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        )}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick={onClickEliminar}\r\n      >\r\n        Eliminar Proyecto &times;\r\n      </button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListadoTareas;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\nimport Barra from \"../layout/Barra\";\r\nimport FormTareas from \"../tareas/FormTareas\";\r\nimport ListadoTareas from \"../tareas/ListadoTareas\";\r\nimport AuthContext from \"../../context/autenticacion/authContex\";\r\n\r\nconst Proyectos = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado } = authContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    //extraer informacion de autenticacion\r\n    <div className=\"contenedor-app\">\r\n      <Sidebar />\r\n      <div className=\"seccion-principal\">\r\n        <Barra />\r\n        <main>\r\n          <FormTareas />\r\n          <div className=\"contenedor-tareas\">\r\n            <ListadoTareas />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Proyectos;\r\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL =  'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA =  'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA =  'LIMPIAR_TAREA';\r\n\r\n\r\nexport const MOSTRAR_ALERTA =  'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA =  'OCULTAR_ALERTA';\r\n\r\n\r\n\r\nexport const REGISTRO_EXITOSO =  'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR =  'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO =  'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO =  'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR =  'LOGIN_ERROR';\r\nexport const CERRAR_SESION =  'CERRAR_SESION';","import {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types/\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case FORMULARIO_PROYECTO:\r\n      return {\r\n        ...state,\r\n        formulario: true,\r\n      };\r\n    case OBTENER_PROYECTOS:\r\n      return {\r\n        ...state,\r\n        proyectos: action.payload,\r\n      };\r\n    case AGREGAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: [action.payload, ...state.proyectos],\r\n        formulario: false,\r\n        errorformulario: false,\r\n      };\r\n    case VALIDAR_FORMULARIO:\r\n      return {\r\n        ...state,\r\n        errorformulario: true,\r\n      };\r\n    case PROYECTO_ACTUAL:\r\n      return {\r\n        ...state,\r\n        proyecto: state.proyectos.filter(\r\n          (proyecto) => proyecto._id === action.payload\r\n        ),\r\n      };\r\n    case ELIMINAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: state.proyectos.filter(\r\n          (proyecto) => proyecto._id !== action.payload\r\n        ),\r\n        proyecto: null,\r\n      };\r\n    case PROYECTO_ERROR:\r\n      return {\r\n        ...state,\r\n        mensaje: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from \"react\";\r\nimport proyectoContext from \"./proyectoContex\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n} from \"../../types/\";\r\nimport clienteAxios from \"../../config/axios\";\r\nconst ProyectoState = (props) => {\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorformulario: false,\r\n    proyecto: null,\r\n    mensaje: null\r\n  };\r\n  //Dispatch para las acciones\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n  //Serie de funciones para el CRUD\r\n  const mostrarForm = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO,\r\n    });\r\n  };\r\n  //Obtener proyectos\r\n  const obtenerProyectos = async () => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/api/proyectos\");\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta  = {\r\n        msg: 'Hubo un error ',\r\n        categoria: 'alerta-error'\r\n      }\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      })\r\n    } \r\n  };\r\n\r\n  //AGREGAR NUEVO PROYECTO\r\n  const agregarProyecto = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/proyectos\", proyecto);\r\n      console.log(resultado);\r\n      dispatch({\r\n        type: AGREGAR_PROYECTO,\r\n        payload: resultado.data,\r\n      });\r\n    }catch (error) {\r\n      const alerta  = {\r\n        msg: 'Hubo un error ',\r\n        categoria: 'alerta-error'\r\n      }\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta\r\n      })\r\n    }\r\n  };\r\n\r\n  //validar formulario POR ERRORES\r\n  const mostrarError = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO,\r\n    });\r\n  };\r\n  //Funcion que selecciona el proyecto\r\n  const proyectoActual = (proyectoId) => {\r\n    dispatch({\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId,\r\n    });\r\n  };\r\n  //Eliminar un proyecto\r\n  const eliminarProyecto = async(proyectoId) => {\r\n    try {    \r\n   await clienteAxios.delete(`/api/proyectos/${proyectoId}`)\r\n    dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId,\r\n      });\r\n  } catch (error) {\r\n    const alerta  = {\r\n      msg: 'Hubo un error ',\r\n      categoria: 'alerta-error'\r\n    }\r\n    dispatch({\r\n      type: PROYECTO_ERROR,\r\n      payload: alerta\r\n    })\r\n  }\r\n  };\r\n  return (\r\n    <proyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorformulario: state.errorformulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        mostrarForm,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </proyectoContext.Provider>\r\n  );\r\n};\r\nexport default ProyectoState;\r\n","import {\r\n  TAREAS_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TAREAS_PROYECTO:\r\n      return {\r\n        ...state,\r\n        tareasproyectos: action.payload,\r\n      };\r\n    case AGREGAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyectos: [action.payload, ...state.tareasproyectos],\r\n        errortarea: false,\r\n      };\r\n    case VALIDAR_TAREA:\r\n      return {\r\n        ...state,\r\n        errortarea: true,\r\n      };\r\n    case ELIMINAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyectos: state.tareasproyectos.filter(\r\n          (tarea) => tarea._id !== action.payload\r\n        ),\r\n      };\r\n    case ACTUALIZAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyectos: state.tareasproyectos.map((tarea) =>\r\n          tarea._id === action.payload._id ? action.payload : tarea\r\n        ),\r\n      };\r\n    case TAREA_ACTUAL:\r\n      return {\r\n        ...state,\r\n        tareaseleccionada: action.payload,\r\n      };\r\n\r\n    case LIMPIAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareaseleccionada: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport TareaContext from \"./tareaContext\";\r\nimport TareaReducer from \"./tareaReducer\";\r\nimport {\r\n  TAREAS_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst TareaState = (props) => {\r\n  const initialState = {\r\n    tareasproyectos: [],\r\n    errortarea: false,\r\n    tareaseleccionada: null,\r\n  };\r\n  //Crear dispatch y state\r\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n  // Crear funciones\r\n\r\n  //Obtener tareas de un proyecto\r\n  const obtenerTareas = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/api/tareas\", {\r\n        params: { proyecto },\r\n      });\r\n      console.log(resultado);\r\n      dispatch({\r\n        type: TAREAS_PROYECTO,\r\n        payload: resultado.data.tareas,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n\r\n  //Agregar una tarea al proyecto seleccionado\r\n  const agregarTarea = async (tarea) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/tareas\", tarea);\r\n      dispatch({\r\n        type: AGREGAR_TAREA,\r\n        payload: tarea,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //VALIDA Y MUESTRA ERROR\r\n  const validarTarea = () => {\r\n    dispatch({\r\n      type: VALIDAR_TAREA,\r\n    });\r\n  };\r\n  //ELIMINAR TAREA POR SU ID\r\n  const eliminarTarea = async (id, proyecto) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto } });\r\n      dispatch({\r\n        type: ELIMINAR_TAREA,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //CAMBIA EL ESTADO DE LA TAREA\r\n  //Modificar tarea\r\n  const actualizarTarea = async (tarea) => {\r\n    try {\r\n      const resultado = await clienteAxios.put(\r\n        `/api/tareas/${tarea._id}`,\r\n        tarea\r\n      );\r\n      dispatch({\r\n        type: ACTUALIZAR_TAREA,\r\n        payload: resultado.data.tarea,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  //extraer tarea para edicion\r\n  const guardarTareaActual = (tarea) => {\r\n    dispatch({\r\n      type: TAREA_ACTUAL,\r\n      payload: tarea,\r\n    });\r\n  };\r\n\r\n  const limpiarTarea = () => {\r\n    dispatch({\r\n      type: LIMPIAR_TAREA,\r\n    });\r\n  };\r\n  return (\r\n    <TareaContext.Provider\r\n      value={{\r\n        tareasproyectos: state.tareasproyectos,\r\n        errortarea: state.errortarea,\r\n        tareaseleccionada: state.tareaseleccionada,\r\n        obtenerTareas,\r\n        agregarTarea,\r\n        validarTarea,\r\n        eliminarTarea,\r\n        guardarTareaActual,\r\n        actualizarTarea,\r\n        limpiarTarea,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TareaContext.Provider>\r\n  );\r\n};\r\nexport default TareaState;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types/index\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport alertaReducer from \"./alertaReducer\";\r\nimport alertaContext from \"./alertaContex\";\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types/index\";\r\n\r\nconst AlertaState = props => {\r\n  const initialState = {\r\n    alerta: null\r\n  };\r\n  const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n  //Funciones\r\n  const mostrarAlerta = (msg, categoria) => {\r\n    dispatch({\r\n      type: MOSTRAR_ALERTA,\r\n      payload: {\r\n        msg,\r\n        categoria,\r\n      },\r\n    });\r\n    const timeOut = 5000;\r\n    setTimeout(() => {\r\n        dispatch({\r\n            type: OCULTAR_ALERTA\r\n        })\r\n    }, timeOut);\r\n  };\r\n  return (\r\n    <alertaContext.Provider\r\n     value={{\r\n        alerta: state.alerta,\r\n        mostrarAlerta\r\n    }}>\r\n      {props.children}\r\n    </alertaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertaState;\r\n","import {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  CERRAR_SESION,\r\n} from \"../../types/index\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case REGISTRO_EXITOSO:\r\n    case LOGIN_EXITOSO:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        mensaje: null,\r\n        cargando:false\r\n      };\r\n    case OBTENER_USUARIO:\r\n      return {\r\n        ...state,\r\n        autenticado:true,\r\n        usuario: action.payload,\r\n        cargando:false\r\n      };\r\n    case CERRAR_SESION:\r\n    case LOGIN_ERROR:\r\n    case REGISTRO_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        usuario: null,\r\n        autenticado: null,\r\n        mensaje: action.payload,\r\n        cargando:false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import clienteAxios from \"./axios\";\r\n\r\nconst tokenAuth = (token) => {\r\n  if (token) {\r\n    clienteAxios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete clienteAxios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default tokenAuth;\r\n","import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./authContex\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from \"../../config/token\";\r\nimport {\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  CERRAR_SESION,\r\n  REGISTRO_EXITOSO,\r\n} from \"../../types/index\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n    cargando: true\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n  //Crear las funciones\r\n\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\r\n      console.log(respuesta.data);\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: respuesta.data,\r\n      });\r\n      //obtener usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  //retorna el usuario autenticado\r\n\r\n  const usuarioAutenticado = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      //TODO: funcion para enviar el token oir headers\r\n      tokenAuth(token)\r\n    }\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/api/auth\");\r\n      //console.log(respuesta);\r\n      dispatch({\r\n        type: OBTENER_USUARIO, \r\n        payload: respuesta.data.usuario\r\n      })\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  //cuando el usuario inicia sesión\r\n  const iniciarSesion = async(datos)=>{\r\n    try {\r\n      const respuesta = await clienteAxios.post('/api/auth', datos);\r\n      dispatch({\r\n        type: LOGIN_EXITOSO, \r\n        payload: respuesta.data\r\n      });\r\n\r\n      //Obtener usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n        console.log(error.response.data.msg);\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  }\r\n  const cerrarSesion =()=>{\r\n    dispatch({\r\n      type: CERRAR_SESION\r\n    })\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        cargando: state.cargando,\r\n        registrarUsuario,\r\n        iniciarSesion,\r\n        usuarioAutenticado,\r\n        cerrarSesion,\r\n      }}\r\n>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../../context/autenticacion/authContex\";\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { autenticado, usuarioAutenticado, cargando } = authContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n\r\n   }, []);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        !autenticado && !cargando ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default RutaPrivada;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\nimport ProyectoState from \"./context/proyectos/proyectoState\";\nimport TareaState from \"./context/tareas/tareaState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from './config/token';\nimport RutaPrivada from \"./components/routes/RutaPrivada\";\n//Revisar si hay token \nconst token = localStorage.getItem('token');\n\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}